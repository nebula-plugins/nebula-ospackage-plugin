/*
 * Copyright 2014-2015 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript { repositories { jcenter() } } // Some plugin dependencies (namely JFrog) are not in Maven Central

plugins {
    id 'groovy'
    id 'idea'
    id 'jacoco'
    id 'nebula.info' version '2.2.4'
    id 'nebula.contacts' version '2.2.0'
    id 'nebula.maven-publish' version '4.0.1'
    id 'nebula.nebula-release' version '3.0.0'
    id 'nebula.nebula-bintray' version '3.1.0'
    id 'com.gradle.plugin-publish' version '0.9.1'
    id 'nebula.javadoc-jar' version '4.0.1'
    id 'nebula.source-jar' version '4.0.1'
    id 'nebula.maven-apache-license' version '4.0.1'
    id 'com.github.kt3k.coveralls' version '2.4.0'
}

description 'Opinionated plugins that wrap the gradle-ospackage-plugin'

apply from: 'https://raw.githubusercontent.com/nebula-plugins/nebula-core/d2c65b66452da8768aeee1beaf96a42057a9208d/common.gradle'

ext {
    versions = [:]
}

versions.ospackage = '3.1.0'

dependencies {
    compile "com.netflix.nebula:gradle-ospackage-plugin:${versions.ospackage}"
    // We have to ask for the test configuration and the tests jar separately when calling a POM dependency
    testCompile(group: 'com.netflix.nebula', name: 'gradle-ospackage-plugin', version: versions.ospackage, configuration: 'test') {
        exclude group: 'com.netflix.nebula', module: 'nebula-test'
    }
    testCompile "com.netflix.nebula:gradle-ospackage-plugin:${versions.ospackage}:tests"
}

contacts {
    'jryan@netflix.com' {
        moniker 'Justin Ryan'
        github 'quidryan'
    }
    'rob.spieldenner@gmail.com' {
        moniker 'Rob Spieldenner'
        github 'rspieldenner'
    }
    'dmthomas@gmail.com' {
        moniker 'Danny Thomas'
        github 'DanielThomas'
    }
}

test {
  systemProperty 'cleanProjectDir', 'false'
}

pluginBundle {
    plugins {
        ospackageApplication {
            id = 'nebula.ospackage-application'
            displayName = 'Nebula OS Package Application Plugin'
            description = 'Packages output of application plugin into a debian or rpm'
            tags = ['nebula', 'os', 'package', 'rpm', 'deb', 'application']
        }
        ospackageApplicationDaemon {
            id = 'nebula.ospackage-application-daemon'
            displayName = 'Nebula OS Package Application Daemon Plugin'
            description = 'Creates daemontools setup to run output from application plugin'
            tags = ['nebula', 'os', 'package', 'rpm', 'deb', 'application', 'daemon']
        }
        ospackageDaemon {
            id = 'nebula.ospackage-daemon'
            displayName = 'Nebula OS Package Daemon Plugin'
            description = 'Create daemontools runner'
            tags = ['nebula', 'os', 'package', 'rpm', 'deb', 'daemon']
        }
    }
}
